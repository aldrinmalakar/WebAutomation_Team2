<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="16" failed="9" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Users\aldri\IdeaProjects\WebAutomation_Team2\Walmart\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite started-at="2020-11-13T01:23:53 EST" name="TestSuit" finished-at="2020-11-13T01:35:34 EST" duration-ms="701380">
    <groups>
    </groups>
    <test started-at="2020-11-13T01:23:53 EST" name="Walmart" finished-at="2020-11-13T01:35:34 EST" duration-ms="701380">
      <class name="testLocalStorePage.localStorePageTest">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:23:52 EST" name="extentSetup" finished-at="2020-11-13T01:23:53 EST" duration-ms="822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@ff0e6d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Users\aldri\IdeaProjects\WebAutomation_Team2\Walmart\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:23:53 EST" name="setUp" finished-at="2020-11-13T01:24:07 EST" duration-ms="13918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:07 EST" name="startExtent" finished-at="2020-11-13T01:24:07 EST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.accountSignInTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:07 EST" name="getInit" finished-at="2020-11-13T01:24:16 EST" duration-ms="8657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="accountSignInTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:16 EST" name="accountSignInTest" finished-at="2020-11-13T01:24:21 EST" duration-ms="5544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountSignInTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:21 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:24:23 EST" duration-ms="1921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountSignInTest status=SUCCESS method=localStorePageTest.accountSignInTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:23 EST" name="setUp" finished-at="2020-11-13T01:24:33 EST" duration-ms="10301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:23 EST" name="cleanUp" finished-at="2020-11-13T01:24:23 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:33 EST" name="startExtent" finished-at="2020-11-13T01:24:33 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.assertCopyRightTextTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:33 EST" name="getInit" finished-at="2020-11-13T01:24:40 EST" duration-ms="6484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="assertCopyRightTextTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:40 EST" name="assertCopyRightTextTest" finished-at="2020-11-13T01:24:40 EST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertCopyRightTextTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:40 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:24:43 EST" duration-ms="2818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=assertCopyRightTextTest status=SUCCESS method=localStorePageTest.assertCopyRightTextTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:43 EST" name="cleanUp" finished-at="2020-11-13T01:24:43 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:43 EST" name="setUp" finished-at="2020-11-13T01:24:52 EST" duration-ms="9015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:52 EST" name="startExtent" finished-at="2020-11-13T01:24:52 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.callTheStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:24:52 EST" name="getInit" finished-at="2020-11-13T01:25:00 EST" duration-ms="7777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="callTheStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:00 EST" name="callTheStoreTest" finished-at="2020-11-13T01:25:01 EST" duration-ms="529" status="FAIL">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62439}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ed43c8df4dcbb6d2d1a37efaf308904a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62439}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ed43c8df4dcbb6d2d1a37efaf308904a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:932)
at localStore.LocalStorePage.callTheStore(LocalStorePage.java:175)
at testLocalStorePage.localStorePageTest.callTheStoreTest(localStorePageTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callTheStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:01 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:25:04 EST" duration-ms="3046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=callTheStoreTest status=FAILURE method=localStorePageTest.callTheStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:04 EST" name="cleanUp" finished-at="2020-11-13T01:25:04 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:04 EST" name="setUp" finished-at="2020-11-13T01:25:15 EST" duration-ms="11339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:15 EST" name="startExtent" finished-at="2020-11-13T01:25:15 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.careersPageTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:15 EST" name="getInit" finished-at="2020-11-13T01:25:21 EST" duration-ms="5949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="careersPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:21 EST" name="careersPageTest" finished-at="2020-11-13T01:25:32 EST" duration-ms="10953" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test Failed. expected [Member Frontline Cashier] but found [Cashier & Front End Services]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test Failed. expected [Member Frontline Cashier] but found [Cashier & Front End Services]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at localStore.LocalStorePage.assertCareerSearch(LocalStorePage.java:475)
at testLocalStorePage.localStorePageTest.careersPageTest(localStorePageTest.java:172)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- careersPageTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:32 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:25:34 EST" duration-ms="2546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=careersPageTest status=FAILURE method=localStorePageTest.careersPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:34 EST" name="cleanUp" finished-at="2020-11-13T01:25:34 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:34 EST" name="setUp" finished-at="2020-11-13T01:25:44 EST" duration-ms="9644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:44 EST" name="startExtent" finished-at="2020-11-13T01:25:44 EST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.clickAppStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:44 EST" name="getInit" finished-at="2020-11-13T01:25:51 EST" duration-ms="6511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="clickAppStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:25:51 EST" name="clickAppStoreTest" finished-at="2020-11-13T01:26:11 EST" duration-ms="20633" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62628}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ee7a357d478194e84f6fb7225766810f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62628}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ee7a357d478194e84f6fb7225766810f
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at localStore.LocalStorePage.clickAppStore(LocalStorePage.java:302)
at testLocalStorePage.localStorePageTest.clickAppStoreTest(localStorePageTest.java:113)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAppStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:11 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:26:16 EST" duration-ms="4681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAppStoreTest status=FAILURE method=localStorePageTest.clickAppStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:16 EST" name="cleanUp" finished-at="2020-11-13T01:26:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:16 EST" name="setUp" finished-at="2020-11-13T01:26:26 EST" duration-ms="10492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:26 EST" name="startExtent" finished-at="2020-11-13T01:26:26 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.clickPlayStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:26 EST" name="getInit" finished-at="2020-11-13T01:26:33 EST" duration-ms="6404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="clickPlayStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:33 EST" name="clickPlayStoreTest" finished-at="2020-11-13T01:26:53 EST" duration-ms="20614" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62725}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6e6261dcc2e4b7d71a5fdb2255dee1c2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:62725}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6e6261dcc2e4b7d71a5fdb2255dee1c2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at localStore.LocalStorePage.clickPlayStore(LocalStorePage.java:320)
at testLocalStorePage.localStorePageTest.clickPlayStoreTest(localStorePageTest.java:119)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickPlayStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:53 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:26:55 EST" duration-ms="1766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickPlayStoreTest status=FAILURE method=localStorePageTest.clickPlayStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:55 EST" name="cleanUp" finished-at="2020-11-13T01:26:55 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:26:55 EST" name="setUp" finished-at="2020-11-13T01:27:05 EST" duration-ms="9578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:05 EST" name="startExtent" finished-at="2020-11-13T01:27:05 EST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.emailSignupTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:05 EST" name="getInit" finished-at="2020-11-13T01:27:11 EST" duration-ms="5979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="emailSignupTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:11 EST" name="emailSignupTest" finished-at="2020-11-13T01:27:13 EST" duration-ms="2595" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test Failed: Email does not match as provided. expected [testEmail1@walmart.com] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test Failed: Email does not match as provided. expected [testEmail1@walmart.com] but found []
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at localStore.LocalStorePage.validateSignupMethod(LocalStorePage.java:285)
at testLocalStorePage.localStorePageTest.emailSignupTest(localStorePageTest.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emailSignupTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:13 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:27:16 EST" duration-ms="2939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emailSignupTest status=FAILURE method=localStorePageTest.emailSignupTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:16 EST" name="cleanUp" finished-at="2020-11-13T01:27:16 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:16 EST" name="setUp" finished-at="2020-11-13T01:27:28 EST" duration-ms="11715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:28 EST" name="startExtent" finished-at="2020-11-13T01:27:28 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.featureCoronaPageTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:28 EST" name="getInit" finished-at="2020-11-13T01:27:34 EST" duration-ms="5850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="featureCoronaPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:34 EST" name="featureCoronaPageTest" finished-at="2020-11-13T01:27:52 EST" duration-ms="18426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featureCoronaPageTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:52 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:27:55 EST" duration-ms="2701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=featureCoronaPageTest status=SUCCESS method=localStorePageTest.featureCoronaPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:55 EST" name="cleanUp" finished-at="2020-11-13T01:27:55 EST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:27:55 EST" name="setUp" finished-at="2020-11-13T01:28:05 EST" duration-ms="10030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:05 EST" name="startExtent" finished-at="2020-11-13T01:28:05 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.featureCoronaTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:05 EST" name="getInit" finished-at="2020-11-13T01:28:11 EST" duration-ms="6193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="featureCoronaTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:11 EST" name="featureCoronaTest" finished-at="2020-11-13T01:28:13 EST" duration-ms="1792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featureCoronaTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:13 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:28:15 EST" duration-ms="1813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=featureCoronaTest status=SUCCESS method=localStorePageTest.featureCoronaTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:15 EST" name="cleanUp" finished-at="2020-11-13T01:28:15 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:15 EST" name="setUp" finished-at="2020-11-13T01:28:26 EST" duration-ms="10710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:26 EST" name="getInit" finished-at="2020-11-13T01:28:31 EST" duration-ms="5608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:26 EST" name="startExtent" finished-at="2020-11-13T01:28:26 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.feedbackReviewTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="feedbackReviewTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:31 EST" name="feedbackReviewTest" finished-at="2020-11-13T01:28:51 EST" duration-ms="20183" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"hf-feedback-bubble-fixed-link"}
  (Session info: chrome=86.0.4240.198)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63132}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ee840228e320ca5433b78f21d4647dc9
*** Element info: {Using=css selector, value=hf-feedback-bubble-fixed-link}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"hf-feedback-bubble-fixed-link"}
  (Session info: chrome=86.0.4240.198)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63132}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: ee840228e320ca5433b78f21d4647dc9
*** Element info: {Using=css selector, value=hf-feedback-bubble-fixed-link}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at localStore.LocalStorePage.feedbackMethod(LocalStorePage.java:400)
at testLocalStorePage.localStorePageTest.feedbackReviewTest(localStorePageTest.java:155)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feedbackReviewTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:51 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:28:54 EST" duration-ms="3015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feedbackReviewTest status=FAILURE method=localStorePageTest.feedbackReviewTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:54 EST" name="cleanUp" finished-at="2020-11-13T01:28:54 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:28:54 EST" name="setUp" finished-at="2020-11-13T01:29:05 EST" duration-ms="10417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:05 EST" name="startExtent" finished-at="2020-11-13T01:29:05 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.findAnotherStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:05 EST" name="getInit" finished-at="2020-11-13T01:29:11 EST" duration-ms="5795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="findAnotherStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:11 EST" name="findAnotherStoreTest" finished-at="2020-11-13T01:29:15 EST" duration-ms="4783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAnotherStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:15 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:29:17 EST" duration-ms="1376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=findAnotherStoreTest status=SUCCESS method=localStorePageTest.findAnotherStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:17 EST" name="cleanUp" finished-at="2020-11-13T01:29:17 EST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:17 EST" name="setUp" finished-at="2020-11-13T01:29:29 EST" duration-ms="11726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:29 EST" name="startExtent" finished-at="2020-11-13T01:29:29 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.footerDigitalMuseumCheckTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:29 EST" name="getInit" finished-at="2020-11-13T01:29:35 EST" duration-ms="6900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="footerDigitalMuseumCheckTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:35 EST" name="footerDigitalMuseumCheckTest" finished-at="2020-11-13T01:29:44 EST" duration-ms="8494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerDigitalMuseumCheckTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:44 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:29:46 EST" duration-ms="1750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=footerDigitalMuseumCheckTest status=SUCCESS method=localStorePageTest.footerDigitalMuseumCheckTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:46 EST" name="cleanUp" finished-at="2020-11-13T01:29:46 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:46 EST" name="setUp" finished-at="2020-11-13T01:29:55 EST" duration-ms="9636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:55 EST" name="startExtent" finished-at="2020-11-13T01:29:55 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.footerWeeklyAdsCheckTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:29:55 EST" name="getInit" finished-at="2020-11-13T01:30:01 EST" duration-ms="5372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="footerWeeklyAdsCheckTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:01 EST" name="footerWeeklyAdsCheckTest" finished-at="2020-11-13T01:30:03 EST" duration-ms="2726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footerWeeklyAdsCheckTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:03 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:30:06 EST" duration-ms="2187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=footerWeeklyAdsCheckTest status=SUCCESS method=localStorePageTest.footerWeeklyAdsCheckTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:06 EST" name="cleanUp" finished-at="2020-11-13T01:30:06 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:06 EST" name="setUp" finished-at="2020-11-13T01:30:17 EST" duration-ms="11899" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:17 EST" name="startExtent" finished-at="2020-11-13T01:30:17 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.getDirectionTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:17 EST" name="getInit" finished-at="2020-11-13T01:30:23 EST" duration-ms="5319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="getDirectionTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:23 EST" name="getDirectionTest" finished-at="2020-11-13T01:30:29 EST" duration-ms="6328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDirectionTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:29 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:30:32 EST" duration-ms="3335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getDirectionTest status=SUCCESS method=localStorePageTest.getDirectionTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:32 EST" name="cleanUp" finished-at="2020-11-13T01:30:32 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:32 EST" name="setUp" finished-at="2020-11-13T01:30:43 EST" duration-ms="10259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:43 EST" name="startExtent" finished-at="2020-11-13T01:30:43 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.learnAboutWalmartPlusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:43 EST" name="getInit" finished-at="2020-11-13T01:30:48 EST" duration-ms="5023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="learnAboutWalmartPlusTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:48 EST" name="learnAboutWalmartPlusTest" finished-at="2020-11-13T01:30:53 EST" duration-ms="5376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnAboutWalmartPlusTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:53 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:30:55 EST" duration-ms="2337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=learnAboutWalmartPlusTest status=SUCCESS method=localStorePageTest.learnAboutWalmartPlusTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:55 EST" name="cleanUp" finished-at="2020-11-13T01:30:55 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:30:55 EST" name="setUp" finished-at="2020-11-13T01:31:06 EST" duration-ms="10456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:06 EST" name="startExtent" finished-at="2020-11-13T01:31:06 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.makeThisMyStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:06 EST" name="getInit" finished-at="2020-11-13T01:31:13 EST" duration-ms="6613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="makeThisMyStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:13 EST" name="makeThisMyStoreTest" finished-at="2020-11-13T01:31:18 EST" duration-ms="5101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeThisMyStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:18 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:31:20 EST" duration-ms="2226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeThisMyStoreTest status=SUCCESS method=localStorePageTest.makeThisMyStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:20 EST" name="cleanUp" finished-at="2020-11-13T01:31:20 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:20 EST" name="setUp" finished-at="2020-11-13T01:31:29 EST" duration-ms="8695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:29 EST" name="startExtent" finished-at="2020-11-13T01:31:29 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.navigateToLocalStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:29 EST" name="getInit" finished-at="2020-11-13T01:31:36 EST" duration-ms="7490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="navigateToLocalStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:36 EST" name="navigateToLocalStoreTest" finished-at="2020-11-13T01:31:36 EST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToLocalStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:36 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:31:38 EST" duration-ms="1741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToLocalStoreTest status=SUCCESS method=localStorePageTest.navigateToLocalStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:38 EST" name="cleanUp" finished-at="2020-11-13T01:31:38 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:38 EST" name="setUp" finished-at="2020-11-13T01:31:48 EST" duration-ms="10254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:48 EST" name="startExtent" finished-at="2020-11-13T01:31:48 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.newsAndEventsTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:48 EST" name="getInit" finished-at="2020-11-13T01:31:53 EST" duration-ms="5004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="newsAndEventsTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:31:53 EST" name="newsAndEventsTest" finished-at="2020-11-13T01:32:02 EST" duration-ms="9236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newsAndEventsTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:02 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:32:04 EST" duration-ms="1791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newsAndEventsTest status=SUCCESS method=localStorePageTest.newsAndEventsTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:04 EST" name="cleanUp" finished-at="2020-11-13T01:32:04 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:04 EST" name="setUp" finished-at="2020-11-13T01:32:13 EST" duration-ms="9033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:13 EST" name="startExtent" finished-at="2020-11-13T01:32:13 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.openHoursTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:13 EST" name="getInit" finished-at="2020-11-13T01:32:19 EST" duration-ms="6061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="openHoursTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:19 EST" name="openHoursTest" finished-at="2020-11-13T01:32:39 EST" duration-ms="20216" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"div[aria-label='Open until 10 pm'] span[class='open service-expander-friendly-hours']"}
  (Session info: chrome=86.0.4240.198)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63894}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6aee5dcf8f3d7b1268d92ef092e3b0f5
*** Element info: {Using=css selector, value=div[aria-label='Open until 10 pm'] span[class='open service-expander-friendly-hours']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"div[aria-label='Open until 10 pm'] span[class='open service-expander-friendly-hours']"}
  (Session info: chrome=86.0.4240.198)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63894}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 6aee5dcf8f3d7b1268d92ef092e3b0f5
*** Element info: {Using=css selector, value=div[aria-label='Open until 10 pm'] span[class='open service-expander-friendly-hours']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.getText(Unknown Source)
at localStore.LocalStorePage.validateOpenHours(LocalStorePage.java:188)
at testLocalStorePage.localStorePageTest.openHoursTest(localStorePageTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openHoursTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:39 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:32:41 EST" duration-ms="1678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openHoursTest status=FAILURE method=localStorePageTest.openHoursTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:41 EST" name="cleanUp" finished-at="2020-11-13T01:32:41 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:41 EST" name="setUp" finished-at="2020-11-13T01:32:51 EST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:51 EST" name="startExtent" finished-at="2020-11-13T01:32:51 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.pharmacyDropDownTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:51 EST" name="getInit" finished-at="2020-11-13T01:32:57 EST" duration-ms="6047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="pharmacyDropDownTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:57 EST" name="pharmacyDropDownTest" finished-at="2020-11-13T01:32:59 EST" duration-ms="1685" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="button icon-button expander-toggle font-semibold button--link" data-automation-id="button" data-tl-id="expander-button" aria-expanded="false" type="button">...</button> is not clickable at point (947, 906). Other element would receive the click: <span class="closed service-expander-friendly-hours">...</span>
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63974}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 955f44769a801be237c5facfca62b0ea]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="button icon-button expander-toggle font-semibold button--link" data-automation-id="button" data-tl-id="expander-button" aria-expanded="false" type="button">...</button> is not clickable at point (947, 906). Other element would receive the click: <span class="closed service-expander-friendly-hours">...</span>
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63974}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 955f44769a801be237c5facfca62b0ea
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at localStore.LocalStorePage.pharmacyDropDown(LocalStorePage.java:224)
at testLocalStorePage.localStorePageTest.pharmacyDropDownTest(localStorePageTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pharmacyDropDownTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:32:59 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:33:03 EST" duration-ms="4423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=pharmacyDropDownTest status=FAILURE method=localStorePageTest.pharmacyDropDownTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:03 EST" name="cleanUp" finished-at="2020-11-13T01:33:03 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:03 EST" name="setUp" finished-at="2020-11-13T01:33:15 EST" duration-ms="11411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:15 EST" name="getInit" finished-at="2020-11-13T01:33:20 EST" duration-ms="5067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:15 EST" name="startExtent" finished-at="2020-11-13T01:33:15 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.productRecallTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="productRecallTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:20 EST" name="productRecallTest" finished-at="2020-11-13T01:33:25 EST" duration-ms="5584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productRecallTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:25 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:33:27 EST" duration-ms="2022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productRecallTest status=SUCCESS method=localStorePageTest.productRecallTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:27 EST" name="cleanUp" finished-at="2020-11-13T01:33:27 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:27 EST" name="setUp" finished-at="2020-11-13T01:33:35 EST" duration-ms="7849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:35 EST" name="startExtent" finished-at="2020-11-13T01:33:35 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.searchStoreTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:35 EST" name="getInit" finished-at="2020-11-13T01:33:40 EST" duration-ms="5012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="searchStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:40 EST" name="searchStoreTest" finished-at="2020-11-13T01:33:45 EST" duration-ms="4995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchStoreTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:45 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:33:48 EST" duration-ms="2938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchStoreTest status=SUCCESS method=localStorePageTest.searchStoreTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:48 EST" name="cleanUp" finished-at="2020-11-13T01:33:48 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:48 EST" name="setUp" finished-at="2020-11-13T01:33:58 EST" duration-ms="9808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:58 EST" name="startExtent" finished-at="2020-11-13T01:33:58 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.submitComplaintTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:33:58 EST" name="getInit" finished-at="2020-11-13T01:34:03 EST" duration-ms="5258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="submitComplaintTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:03 EST" name="submitComplaintTest" finished-at="2020-11-13T01:34:13 EST" duration-ms="9917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitComplaintTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:13 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:34:15 EST" duration-ms="1801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitComplaintTest status=SUCCESS method=localStorePageTest.submitComplaintTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:15 EST" name="cleanUp" finished-at="2020-11-13T01:34:15 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:15 EST" name="setUp" finished-at="2020-11-13T01:34:25 EST" duration-ms="10032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:25 EST" name="startExtent" finished-at="2020-11-13T01:34:25 EST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.trackOrderTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:25 EST" name="getInit" finished-at="2020-11-13T01:34:31 EST" duration-ms="6211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method signature="trackOrderTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:31 EST" name="trackOrderTest" finished-at="2020-11-13T01:34:55 EST" duration-ms="23269" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64310}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 133b263127438d70c68439bf4837d062]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=86.0.4240.198)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-TSTLMB5', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 86.0.4240.198, chrome: {chromedriverVersion: 86.0.4240.22 (398b0743353ff..., userDataDir: C:\Users\aldri\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64310}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 133b263127438d70c68439bf4837d062
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at localStore.LocalStorePage.clickTrackOrder(LocalStorePage.java:388)
at testLocalStorePage.localStorePageTest.trackOrderTest(localStorePageTest.java:149)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trackOrderTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:55 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:34:57 EST" duration-ms="2441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=trackOrderTest status=FAILURE method=localStorePageTest.trackOrderTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:57 EST" name="cleanUp" finished-at="2020-11-13T01:34:57 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:34:57 EST" name="setUp" finished-at="2020-11-13T01:35:09 EST" duration-ms="11772" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getInit()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:09 EST" name="getInit" finished-at="2020-11-13T01:35:15 EST" duration-ms="6550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInit -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:09 EST" name="startExtent" finished-at="2020-11-13T01:35:09 EST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLocalStorePage.localStorePageTest.wPlusPageTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="wPlusPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:15 EST" name="wPlusPageTest" finished-at="2020-11-13T01:35:33 EST" duration-ms="17421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wPlusPageTest -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:33 EST" name="afterEachTestMethod" finished-at="2020-11-13T01:35:34 EST" duration-ms="1535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=wPlusPageTest status=SUCCESS method=localStorePageTest.wPlusPageTest()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:34 EST" name="cleanUp" finished-at="2020-11-13T01:35:34 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testLocalStorePage.localStorePageTest@29e495ff]" started-at="2020-11-13T01:35:34 EST" name="generateReport" finished-at="2020-11-13T01:35:35 EST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testLocalStorePage.localStorePageTest -->
    </test> <!-- Walmart -->
  </suite> <!-- TestSuit -->
</testng-results>
